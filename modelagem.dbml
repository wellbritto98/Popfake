Table AspNetRoles {
  Id text [pk]
  Name varchar(256)
  NormalizedName varchar(256)
  ConcurrencyStamp text
  indexes {
    (NormalizedName) [unique]
  }
}

Table AspNetUsers {
  Id text [pk]
  Nickname text
  RegisteredAt timestamp
  DataNascimento timestamp
  LastLoginAt timestamp
  RefreshToken text
  TokenExpiredAt timestamp
  TokenCreatedAt timestamp
  UserName varchar(256)
  NormalizedUserName varchar(256)
  Email varchar(256)
  NormalizedEmail varchar(256)
  EmailConfirmed bool
  PasswordHash text
  SecurityStamp text
  ConcurrencyStamp text
  PhoneNumber text
  PhoneNumberConfirmed bool
  TwoFactorEnabled bool
  LockoutEnd timestamptz
  LockoutEnabled bool
  AccessFailedCount int
  indexes {
    (NormalizedEmail)
    (NormalizedUserName) [unique]
  }
}

Table Cities {
  Id int [pk, increment]
  Name text
  Timezone text
}

Table Examples {
  Id int [pk, increment]
  Name text
  Nickname text
  IsConfirmed bool
}

Table AspNetRoleClaims {
  Id int [pk, increment]
  RoleId text [ref: > AspNetRoles.Id]
  ClaimType text
  ClaimValue text
  indexes {
    (RoleId)
  }
}

Table AspNetUserClaims {
  Id int [pk, increment]
  UserId text [ref: > AspNetUsers.Id]
  ClaimType text
  ClaimValue text
  indexes {
    (UserId)
  }
}

Table AspNetUserLogins {
  LoginProvider text [pk]
  ProviderKey text [pk]
  ProviderDisplayName text
  UserId text [ref: > AspNetUsers.Id]
  indexes {
    (UserId)
  }
}

Table AspNetUserRoles {
  UserId text [pk, ref: > AspNetUsers.Id]
  RoleId text [pk, ref: > AspNetRoles.Id]
  indexes {
    (RoleId)
  }
}

Table AspNetUserTokens {
  UserId text [pk, ref: > AspNetUsers.Id]
  LoginProvider text [pk]
  Name text [pk]
  Value text
}

Table Companies {
  Id int [pk, increment]
  Name text
  CityId int [ref: > Cities.Id]
  CompanyType int
  Money numeric(20)
  indexes {
    (CityId)
  }
}

Table Locations {
  Id int [pk, increment]
  Name text
  Quality int
  TypeId int
  Type int
  CompanyId int [ref: > Companies.Id]
  Money numeric(20)
  CityId int [default: 0, ref: > Cities.Id]
  indexes {
    (CityId)
    (CompanyId)
  }
}

Table Characters {
  Id int [pk, increment]
  UserId text [ref: > AspNetUsers.Id]
  FirstName text
  LastName text
  Age int
  Gender text
  BirthAt timestamp
  BirthCityId int [ref: > Cities.Id]
  CurrentLocationId int [ref: > Locations.Id]
  Money numeric(20)
  MaxWeight numeric(20)
  indexes {
    (BirthCityId)
    (CurrentLocationId)
    (UserId)
  }
}

Table CompanyShareholders {
  CharacterId int [pk, ref: > Characters.Id]
  CompanyId int [pk, ref: > Companies.Id]
  Shares int
  IsPresident bool
  indexes {
    (CompanyId)
  }
}

Table Skills {
    Id int [pk, increment]
    Name text
    Description text
}

Table CharacterSkills {
    CharacterId int [pk, ref: > Characters.Id]
    SkillId int [pk, ref: > Skills.Id]
    Level int
    indexes {
        (SkillId)
    }
}

Table Atributtes {
    Id int [pk, increment]
    Name text
    Description text
}

Table CharacterAtributtes {
    CharacterId int [pk, ref: > Characters.Id]
    AtributteId int [pk, ref: > Atributtes.Id]
    Level int
    indexes {
        (AtributteId)
    }
}

Table Items {
    Id int [pk, increment]
    Name text
    Description text
    Type ItemType
    Function ItemFunction  // Ou considerar um enum se as funções forem fixas
    Weight numeric(20, 2)  // Peso de um único item
}
Table CharacterInventory {
    CharacterId int [pk, ref: > Characters.Id]
    ItemId int [pk, ref: > Items.Id]
    Quantity int
    indexes {
        (ItemId, CharacterId)
    }
}





